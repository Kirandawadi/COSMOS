# Generated by Django 4.2 on 2023-05-10 01:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Collection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=1024, verbose_name="Name")),
                (
                    "machine_name",
                    models.CharField(
                        help_text="This is the Name value, but with only alphanumeric characters and _ instead of spaces",
                        max_length=1024,
                        verbose_name="Machine Name",
                    ),
                ),
                (
                    "config_folder",
                    models.CharField(max_length=2048, verbose_name="Config Folder"),
                ),
                (
                    "url",
                    models.URLField(blank=True, max_length=2048, verbose_name="URL"),
                ),
                (
                    "division",
                    models.IntegerField(
                        choices=[
                            (1, "Astrophysics"),
                            (2, "Biological and Physical Sciences"),
                            (3, "Earth Science"),
                            (4, "Heliophysics"),
                            (5, "Planetary Science"),
                        ]
                    ),
                ),
                (
                    "turned_on",
                    models.BooleanField(default=True, verbose_name="Turned On"),
                ),
                (
                    "connector",
                    models.IntegerField(
                        choices=[(1, "Web crawler parallel")], default=1
                    ),
                ),
                (
                    "source",
                    models.IntegerField(
                        choices=[
                            (1, "Only in original"),
                            (2, "Both"),
                            (3, "Only in Sinequa configs"),
                        ]
                    ),
                ),
                (
                    "update_frequency",
                    models.IntegerField(
                        choices=[
                            (1, "Daily"),
                            (2, "Weekly"),
                            (3, "Biweekly"),
                            (4, "Monthly"),
                        ],
                        default=2,
                    ),
                ),
                (
                    "document_type",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Images"),
                            (2, "Data"),
                            (3, "Documentation"),
                            (4, "Software and Tools"),
                            (5, "Missions and Instruments"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "tree_root",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=1024,
                        verbose_name="Tree Root",
                    ),
                ),
                ("delete", models.BooleanField(default=False)),
                (
                    "audit_hierarchy",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=2048,
                        verbose_name="Audit Hierarchy",
                    ),
                ),
                (
                    "audit_url",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=2048,
                        verbose_name="Audit URL",
                    ),
                ),
                (
                    "audit_mapping",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=2048,
                        verbose_name="Audit Mapping",
                    ),
                ),
                (
                    "audit_label",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=2048,
                        verbose_name="Audit Label",
                    ),
                ),
                (
                    "audit_query",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=2048,
                        verbose_name="Audit Query",
                    ),
                ),
                (
                    "audit_duplicate_results",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=2048,
                        verbose_name="Audit Duplicate Results",
                    ),
                ),
                (
                    "audit_metrics",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=2048,
                        verbose_name="Audit Metrics",
                    ),
                ),
                (
                    "cleaning_assigned_to",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=128,
                        verbose_name="Cleaning Assigned To",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, default="", verbose_name="Notes"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("new_collection", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Collection",
                "verbose_name_plural": "Collections",
            },
        ),
        migrations.CreateModel(
            name="TitlePattern",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "match_pattern",
                    models.CharField(
                        help_text="This pattern is compared against the URL of all the documents in the collection and matching documents will have their title overwritten with the title_pattern",
                        max_length=2048,
                        verbose_name="Pattern",
                    ),
                ),
                (
                    "title_pattern",
                    models.CharField(
                        help_text="This is the pattern for the new title. You can write your own text, as well as add references to a specific xpath or the orignal title. For example 'James Webb {scraped_title}: {xpath}'",
                        max_length=2048,
                        verbose_name="New Title Pattern",
                    ),
                ),
                (
                    "collection",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="title_patterns",
                        to="sde_collections.collection",
                    ),
                ),
            ],
            options={
                "verbose_name": "Title Re-Write Pattern",
                "verbose_name_plural": "Title Re-Write Patterns",
            },
        ),
        migrations.CreateModel(
            name="CandidateURL",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("url", models.CharField(max_length=2048, verbose_name="URL")),
                (
                    "scraped_title",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="This is the original title scraped by Sinequa",
                        max_length=2048,
                        verbose_name="Scraped Title",
                    ),
                ),
                (
                    "generated_title",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="This is the title generated based on a Title Pattern",
                        max_length=2048,
                        verbose_name="Generated Title",
                    ),
                ),
                (
                    "level",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        help_text="Level in the tree. Based on /.",
                        verbose_name="Level",
                    ),
                ),
                ("visited", models.BooleanField(default=False)),
                (
                    "collection",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="candidate_urls",
                        to="sde_collections.collection",
                    ),
                ),
            ],
            options={
                "verbose_name": "Candidate URL",
                "verbose_name_plural": "Candidate URLs",
                "ordering": ["url"],
            },
        ),
        migrations.CreateModel(
            name="ExcludePattern",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "match_pattern",
                    models.CharField(
                        help_text="This pattern is compared against the URL of all the documents in the collection and documents with a matching URL are excluded.",
                        max_length=2048,
                        verbose_name="Pattern",
                    ),
                ),
                (
                    "reason",
                    models.TextField(
                        blank=True, default="", verbose_name="Reason for excluding"
                    ),
                ),
                (
                    "candidate_urls",
                    models.ManyToManyField(to="sde_collections.candidateurl"),
                ),
                (
                    "collection",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exclude_patterns",
                        to="sde_collections.collection",
                    ),
                ),
            ],
            options={
                "verbose_name": "Exclude Pattern",
                "verbose_name_plural": "Exclude Patterns",
                "unique_together": {("collection", "match_pattern")},
            },
        ),
    ]
